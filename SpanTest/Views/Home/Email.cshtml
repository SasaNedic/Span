@{
    ViewBag.Title = "Email";

    //Loading all items needed from form
    List<string> agentName = new List<string>();
    List<string> agentPassenger = new List<string>();
    List<string> agentStudent = new List<string>();
    for(int i = 0; i <=10 ;i++){
        agentName.Add(Request["Name[" + i + "].Name"]);
        agentPassenger.Add(Request["Name[" + i + "].Passenger"]);
        agentStudent.Add(Request["Name[" + i + "].Student"]);
    }
    var startingDay = Request["StartingDay"];
    var endingDay = Request["EndingDay"];
    var vehicle = Request["Vehicle"];
    
    var vehicleRegistration="";
    var vehicleOwner="";
    if(vehicle == "Automobil")
    {
        vehicleRegistration = Request["VehicleRegistration"];
        vehicleOwner = Request["VehicleOwner"];
    }
    
    var reason = Request["Reason"];
    var travelRelation = Request["TravelRelation"];
    var projectNumber = Request["ProjectNumber"];
    var accommodation = Request["Accommodation"];

    
    var accommodationEntry = "";
    var accommodationExit = "";
    var comment = "";
    List<string> accommodationNights = new List<string>(30);
    if(accommodation == "true")
    {
        for (int i = 0; i < 30; i++)
        {
            accommodationNights.Add(Request["AccommodationNights"+i+".Value"]);
        }
        accommodationEntry = Request["AccommodationEntry"];
        accommodationExit = Request["AccommodationExit"];
        comment = Request["Comment"];
    }
    
    
    //creating email body
    int nonEmptyAgent = 0;
    foreach(string b in agentName)
    {
        if(b != "")
        {
            nonEmptyAgent++;
        }
    }
    int passNonStud = 0;
    for(int i=0; i<agentStudent.Count(); i++)
    {
        if(agentStudent[i] == "false" && agentName[i] != "")
        {
            passNonStud++;
        }
    }
    
    
    string errorMessage="";
    string EmailBodyText = "Pozdrav, <br/><br/> Zamolio bih za " + nonEmptyAgent +" ";
    if(passNonStud == 1)
    {
        EmailBodyText = EmailBodyText + "putni nalog za:<br/>";
    }
    else if (passNonStud > 1 && passNonStud < 5)
    {
        EmailBodyText = EmailBodyText + "putna naloga za:<br/>";
    }
    else{
        EmailBodyText = EmailBodyText + "putnih naloga za:<br/>";
    }
    for (int i = 0; i < nonEmptyAgent; i++)
    {
        if(agentStudent[i] == "false")
        {
            EmailBodyText = EmailBodyText + agentName[i] + "<br/>";
        }
    }
    EmailBodyText = EmailBodyText + "<br/> Putovanje počinje " + startingDay + " te završava " + endingDay + ".<br/>";
    EmailBodyText = EmailBodyText + "Relacija putovanja je " + travelRelation + ".<br/>";

    EmailBodyText = EmailBodyText + "Sredstvo putovanja će biti " + vehicle;
    if(vehicle=="Automobil")
    {
        EmailBodyText = EmailBodyText + " u vlasništvu " + vehicleOwner + " sa registracijom " + vehicleRegistration;
    }
    EmailBodyText = EmailBodyText + ".";
    
    if(accommodation == "true")
    {
        EmailBodyText = EmailBodyText + "<br/>Potreban je i smještaj za ";
        if(nonEmptyAgent == 1){
            EmailBodyText = EmailBodyText + nonEmptyAgent + " osobu za sljedeće datume:<br/>";
        }
        else if(nonEmptyAgent >1 && nonEmptyAgent< 5)
        {
            EmailBodyText = EmailBodyText + nonEmptyAgent + " osobe za sljedeće datume:<br/>";
        }
        else{
            EmailBodyText = EmailBodyText + nonEmptyAgent + " osoba za sljedeće datume:<br/>";
        }

        int nonEmptyNights = 0;
        foreach (string b in accommodationNights)
        {
            if (b != "")
            {
                nonEmptyNights++;
            }
        }
        
        for(int i=0; i<nonEmptyNights;i++)
        {
            if(i%5==0){
                EmailBodyText = EmailBodyText + accommodationNights[i] + ",<br/>";
            }
            else if(i+1 == accommodationNights.Count()){
                EmailBodyText = EmailBodyText + accommodationNights[i] + ".";
            }
            else{
                EmailBodyText = EmailBodyText + accommodationNights[i] + ",";
            }
        }
        EmailBodyText = EmailBodyText + "<br/>Smještaj je namjenjen za: ";
        for(int i=0; i<nonEmptyAgent;i++)
        {
            if(agentStudent[i] =="false"){
                EmailBodyText = EmailBodyText + agentName[i] + "<br/>";
            }
            else{
                EmailBodyText = EmailBodyText + agentName[i] + "(student)<br/>";
            }
        }
        EmailBodyText = EmailBodyText + "U smještaj bi ušli " + accommodationEntry + " te ga napustili " + accommodationExit + ".<br/><br/>";
    }
    EmailBodyText = EmailBodyText + "<br/>Razlog putovanja je " + reason + ".<br/>";
    EmailBodyText = EmailBodyText + "Putovanje se vodi na projekt pod brojem: " + projectNumber + ".<br/>";

    EmailBodyText = EmailBodyText + "<br/> Lijep pozdrav, <br/>" + agentName[0];
    
    
        //trying to send the mail
    try
    {
        WebMail.SmtpServer = "smtp.gmail.com";
        WebMail.SmtpPort = 587;
        WebMail.UserName = "sasa.morpheus.nedic@gmail.com";
        WebMail.Password = "******";
        WebMail.From = "sasa.morpheus.nedic@gmail.com";
        WebMail.EnableSsl = true;
        //password removed because its my actual password
        WebMail.Send(to: "sasa.morpheus.nedic@gmail.com",
            subject: "Putni nalog " + travelRelation,
            body: EmailBodyText,
            cc: "email-managera@span.eu"
            );
        //gmail wont work without SSL, and Access for less secure apps
    }
    catch (Exception ex)
    {
        errorMessage = ex.Message;
    }
}
<h2>Email</h2>

@if(errorMessage == "")
{
    <p>Vaš zahtjev je uspješno poslan</p>
}
else
{
    <p>Došlo je do greške pri slanju zahtjeva, molimo probajte kasnije</p>
}
<div>
    @Html.ActionLink("Back to Home", "Index")
</div>